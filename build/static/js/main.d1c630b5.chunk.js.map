{"version":3,"sources":["Components/AddContactForm/AddContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","utils/storage.js","App.js","index.js"],"names":["AddContactForm","formSubmit","inputValue","name","number","onSubmit","type","onChange","value","ContactList","contacts","filteredNames","deleteItem","length","map","el","key","id","onClick","Filter","onInput","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","App","state","filter","e","target","setState","resetData","preventDefault","contact","uuidv4","isExist","find","alert","deletedArr","toLowerCase","includes","takeFromStorage","getContact","storage","addToStorage","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1c630b5.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddContactForm = ({ formSubmit, inputValue, name, number }) => {\n  return (\n    <form onSubmit={formSubmit}>\n      <p>Name</p>\n      <input type=\"text\" onChange={inputValue} value={name} name=\"name\"></input>\n      <p>Number</p> \n      <input\n        type=\"text\"\n        onChange={inputValue}\n        value={number}\n        name=\"number\"\n      />\n      <button type=\"submit\">Add phone</button>\n    </form>\n  );\n  AddContactForm.propTypes = {\n    formSubmit: PropTypes.func.isRequired,\n    inputValue: PropTypes.func.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string,\n  };\n};\n\nexport default AddContactForm;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst ContactList = ({ contacts, filteredNames, deleteItem }) => {\n\n  return (\n    <>\n      {contacts.length > 2 ? (\n        <ul>\n          {filteredNames().map((el) => (\n            <li key={el.id}>\n              {el.name}: {el.number} {\"   \"}\n              <button onClick={() => deleteItem(el.id)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <ul>\n          {contacts.map((el) => (\n            <li key={el.id}>\n              {el.name}: {el.number} {\"   \"}\n              <button onClick={() => deleteItem(el.id)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n  ContactList.propTypes ={ \n    contacts: PropTypes.arrayOf({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    filteredNames: PropTypes.func, \n    deleteItem: PropTypes.func,\n  }\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\n\nconst Filter = ({ inputValue,  }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        onInput={inputValue}\n        name=\"filter\"/>\n    </>\n  );\n  Filter.propTypes ={\n    inputValue:PropTypes.func.isRequired,\n\n  }\n\n};\n\nexport default Filter;\n","const save = (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      throw new Error();\n    }\n  };\n\n  const get = key => {\n    try {\n      const items = localStorage.getItem(key);\n      return items ? JSON.parse(items) : null;\n    } catch (err) {\n      throw new Error();\n    }\n  };\n  \n  export default {\n    save,\n    get,\n  }","import React, { Component } from \"react\";\nimport AddContactForm from \"./Components/AddContactForm/AddContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport storage from \"./utils/storage\"\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n\n  async componentDidUpdate (prevState) {\n    this.addToStorage(prevState)\n  }\n\n\n  inputValue = (e) => {    \n    const { name, value }  = e.target;\n    this.setState({ [name]: value });\n  };\n\n  resetData = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  }\n\n  formSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      name: this.state.name,\n      number: this.state.number,\n      id: uuidv4(),\n    };\n    const isExist = this.state.contacts.find((el) => el.name === this.state.name)\n    if (this.state.name === \"\" || this.state.number === \"\" ) {\n      alert(\"Fill the form\");\n      return;\n    }\n    if (isExist) {\n      alert(`${this.state.name} is already in contact`);\n      this.resetData()\n      return;\n    } else {\n      this.setState({ contacts: [...this.state.contacts, contact] });\n    }\n    this.resetData()\n\n  };\n\n\n\n  deleteItem = (id) => {\n    const deletedArr = this.state.contacts.filter((el) => el.id !== id);\n    this.setState({ contacts: deletedArr });\n  };\n\n  filteredNames = () => {\n    return this.state.contacts.filter((el) =>\n      el.name.toLowerCase().includes(this.state.filter)\n    );\n  };\n\n  takeFromStorage = () => {\n    const getContact = storage.get(\"contact\")\n    if (getContact) {\n    this.setState({\n      contacts: getContact\n    })\n  }\n  }\n\n  async componentDidMount () {\n    this.takeFromStorage()\n  }\n \n  addToStorage = (prevState) => {\n    if (prevState !== this.state.contacts) {\n      storage.save(\"contact\", this.state.contacts)\n    }\n  }\n\n\n\n\n\n\n  render() {\n    const { name, contacts, filter, number } = this.state;\n\n    return (\n      <>\n        <h1>PhoneBook</h1>\n        <AddContactForm\n          formSubmit={this.formSubmit}\n          inputValue={this.inputValue}\n          name={name}\n          number={number}\n        />\n        <h2>Contact List</h2>\n        <Filter inputValue={this.inputValue} filter={filter}/>\n        <ContactList\n          contacts={contacts}\n          filteredNames={this.filteredNames}\n          deleteItem={this.deleteItem}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}